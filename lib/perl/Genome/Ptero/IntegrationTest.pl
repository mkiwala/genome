#!/usr/bin/env genome-perl

use strict;
use warnings FATAL => 'all';

use Test::More;
use above 'Genome';
use File::Basename qw(dirname basename);
use File::Slurp qw(read_file);
use File::Spec qw();
use JSON qw(from_json);

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{GENOME_WORKFLOW_BUILDER_BACKEND} = 'ptero';
};


for my $test_directory (glob test_data_directory('parallel-cmd')) {
    my $test_name = basename($test_directory);
    my $workflow = Genome::WorkflowBuilder::DAG->from_xml_filename(workflow_xml_file($test_name));
    my $outputs = $workflow->execute(inputs => get_test_inputs($test_name),
        polling_interval => 2);
    is_deeply($outputs, get_test_outputs($test_name));
}


done_testing();


sub workflow_xml_file {
    my $name = shift;

    return File::Spec->join(test_data_directory($name), 'workflow.xml');
}

sub get_test_inputs {
    my $name = shift;
    return from_json(read_file(File::Spec->join(test_data_directory($name),
        'inputs.json')));
}

sub get_test_outputs {
    my $name = shift;
    return from_json(read_file(File::Spec->join(test_data_directory($name),
        'outputs.json')));
}

sub test_data_directory {
    my $name = shift;

    return File::Spec->join(dirname(__FILE__), 'workflow_tests', $name);
}
